[{"/Users/jay/Desktop/school/1030/courseProject-individual/src/index.js":"1","/Users/jay/Desktop/school/1030/courseProject-individual/src/App.js":"2","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/resume/resume.js":"3","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/footer/footer.js":"4","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/contact/contact.js":"5","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/login/login.js":"6","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/home/home.js":"7","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/register/register.js":"8","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/projects/projects.js":"9","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/login/private/private.js":"10","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/nav/nav.js":"11","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/header/header.js":"12","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/about/about.js":"13","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/helpers/authHelper.js":"14","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/resume/ViewResume.jsx":"15","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/resume/AddResumeData.jsx":"16","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/resume/EditResume.jsx":"17","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/projects/ViewProjects.jsx":"18","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/projects/AddProjectData.jsx":"19","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/projects/EditProject.jsx":"20","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/login/SecureRoute.jsx":"21","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/login/AdminPage.jsx":"22","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/login/Login.jsx":"23"},{"size":314,"mtime":1619744838779,"results":"24","hashOfConfig":"25"},{"size":2575,"mtime":1619970019844,"results":"26","hashOfConfig":"25"},{"size":2582,"mtime":1619642929499,"results":"27","hashOfConfig":"25"},{"size":1697,"mtime":1619800859575,"results":"28","hashOfConfig":"25"},{"size":2709,"mtime":1615692827669,"results":"29","hashOfConfig":"25"},{"size":4347,"mtime":1619926697076,"results":"30","hashOfConfig":"25"},{"size":997,"mtime":1619746472481,"results":"31","hashOfConfig":"25"},{"size":2031,"mtime":1615694046195,"results":"32","hashOfConfig":"25"},{"size":3646,"mtime":1619907226042,"results":"33","hashOfConfig":"25"},{"size":1494,"mtime":1619970090014,"results":"34","hashOfConfig":"25"},{"size":728,"mtime":1619970031058,"results":"35","hashOfConfig":"25"},{"size":1876,"mtime":1615694232340,"results":"36","hashOfConfig":"25"},{"size":1072,"mtime":1615693114942,"results":"37","hashOfConfig":"25"},{"size":332,"mtime":1619924811038,"results":"38","hashOfConfig":"25"},{"size":1711,"mtime":1619969061980,"results":"39","hashOfConfig":"25"},{"size":4140,"mtime":1619970331937,"results":"40","hashOfConfig":"25"},{"size":5148,"mtime":1619922494395,"results":"41","hashOfConfig":"25"},{"size":1723,"mtime":1619969022057,"results":"42","hashOfConfig":"25"},{"size":3097,"mtime":1619970275865,"results":"43","hashOfConfig":"25"},{"size":4111,"mtime":1619922536527,"results":"44","hashOfConfig":"25"},{"size":475,"mtime":1619924792560,"results":"45","hashOfConfig":"25"},{"size":1287,"mtime":1619969990109,"results":"46","hashOfConfig":"25"},{"size":3773,"mtime":1619970107034,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"o9curn",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jay/Desktop/school/1030/courseProject-individual/src/index.js",[],["99","100"],"/Users/jay/Desktop/school/1030/courseProject-individual/src/App.js",["101"],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/resume/resume.js",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/footer/footer.js",["102"],"import React, { Fragment } from \"react\";\n// import \"./footer.css\"\n\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <section className=\"footer\">\n                    <footer className=\"footer-top\">\n                        <hr className={\"footer-hr\"} />\n                        <div>\n                            <a href=\"https://www.facebook.com\" className=\"fb-ic icons\">\n                                <i className=\"fab fa-facebook-f fa-lg white-text footer-icon\" />\n                            </a>\n                            <a href=\"https://www.twitter.com\" className=\"tw-ic icons\">\n                                <i className=\"fab fa-twitter fa-lg white-text footer-icon\" />\n                            </a>\n                            <a href=\"https://github.com/Jmmilton\" className=\"gplus-ic icons\">\n                                <i className=\"fab fa-google-plus-g fa-lg white-text footer-icon\" />\n                            </a>\n                            <a href=\"https://www.linkedin.com/in/jasonmmilton/\" className=\"li-ic icons\">\n                                <i className=\"fab fa-linkedin-in fa-lg white-text footer-icon\" />\n                            </a>\n                            <a href=\"https://github.com/Jmmilton\" className=\"gh-ic icons\">\n                                <i className=\"fab fa-github fa-lg white-text footer-icon\" />\n                            </a>\n                        </div>\n                        <h6 className=\"footer-bottom\">Jason Milton â„¢</h6>\n                    </footer>\n                </section>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Footer;","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/contact/contact.js",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/login/login.js",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/home/home.js",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/register/register.js",["103"],"import React, { useState } from \"react\";\nimport { useHistory, useLocation } from 'react-router-dom'\nimport Nav from \"../nav/nav\"\nimport '../../style.css';\n\n    const Register = () => {\n    let history = useHistory();\n    let location = useLocation();\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [auth, setAuth] = useState(true)\n\n    const loginSubmit = async event => {\n        \n        event.preventDefault()\n        const response = await fetch('http://localhost:9000/auth', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({username, password})\n        })\n        const payload = await response.json()\n        if (response.status >= 400) {\n            setAuth(false)\n        } else {\n            sessionStorage.setItem('token', payload.token)\n\n            let { from } = location.state || { from: { pathname: \"/login\" } };\n            history.replace(from);\n        }\n        \n    }\n      return (\n            <>\n                <Nav />\n                <section>\n                    <h2 className=\"contact-h2\">Register</h2>\n                        <form className=\"myForm\" id=\"myForm\" onSubmit={loginSubmit}>\n                            <label>Username: </label>\n                            <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} />\n                            <br/>\n                            <label>Password:</label>\n                            <input type=\"text\" name=\"password\" id=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\n                            <br/>\n                            <input className=\"form-btn\" id=\"button\" type=\"submit\" value=\"Confirm\" />\n                        </form>\n                </section>\n            </>\n        );\n    }\n\nexport default Register;","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/projects/projects.js",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/login/private/private.js",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/nav/nav.js",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/header/header.js",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/about/about.js",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/helpers/authHelper.js",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/resume/ViewResume.jsx",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/resume/AddResumeData.jsx",["104"],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/resume/EditResume.jsx",["105"],"import React, {useState} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport '../../style.css';\n\n\nconst EditResume = (props) => {\n\n    const { className, jobExp } = props;\n    const [resume, setResume] = useState(jobExp);\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n\n    const handleChange = (event) => {\n        console.log([event.target.name], event.target.value)\n        setResume((prevState) => ({\n          ...prevState,\n          [event.target.name]: event.target.value,\n        }));\n      };\n\n     const handleSubmit = (event) => {\n        event.preventDefault();\n        fetch(`http://localhost:4000/resume/edit-resume-data`, {\n          method: \"put\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(resume),\n        }).then((response) => response.json());\n        toggle();\n        // window.location.reload()\n      };\n\n      const deleteResumeSection = async event => {\n\n        let id = resume.id\n        console.log(id)\n        \n        event.preventDefault()\n        const deleteRow = async () => {\n            const response = await fetch(`http://localhost:4000/resume`, {\n                method: 'DELETE',\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify(resume),         \n            }).then((response) => response.json());\n            alert(\"Resume Section Deleted\")\n        }\n        deleteRow()\n        toggle()\n        // window.location.reload()\n    }\n\n    return (\n          <div>\n            <Button onClick={toggle} className=\"edit-btn\" style={{color: \"purple\"}}>Edit Resume</Button>\n            <Modal isOpen={modal} toggle={toggle} className={className}>\n                <ModalHeader toggle={toggle} style={{color: \"purple\"}}>Edit Resume</ModalHeader>\n                    <ModalBody>\n                        <div key={resume.id}>\n                            <input\n                                type=\"text\"\n                                name=\"job\"\n                                value={resume.job}\n                                onChange={handleChange}\n                                placeholder=\" Job\"\n                                id=\"inputID\"\n                                />\n                            <input\n                                type=\"text\"\n                                name=\"jobTitle\"\n                                value={resume.jobTitle}\n                                onChange={handleChange}\n                                placeholder={resume.value}\n                                id=\"inputID\"\n                                />\n                            <input\n                                type=\"text\"\n                                name=\"date\"\n                                value={resume.date}\n                                onChange={handleChange}\n                                placeholder=\" Date\"\n                                id=\"inputID\"\n                                />\n                            <input\n                                type=\"text\"\n                                name=\"note1\"\n                                value={resume.note1}\n                                onChange={handleChange}\n                                placeholder=\"Note 1\"\n                                id=\"inputID\"\n                                />\n                            <input\n                                type=\"text\"\n                                name=\"note2\"\n                                value={resume.note2}\n                                onChange={handleChange}\n                                placeholder=\"Note 2\"\n                                id=\"inputID\"\n                                />\n                            <input\n                                type=\"text\"\n                                name=\"note3\"\n                                value={resume.note3}\n                                onChange={handleChange}\n                                placeholder=\"Note 3\"\n                                id=\"inputID\"\n                                />\n                            <input\n                                type=\"text\"\n                                name=\"note4\"\n                                value={resume.note4}\n                                onChange={handleChange}\n                                placeholder=\"Note 4\"\n                                id=\"inputID\"\n                                />\n                        </div>\n                    </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={handleSubmit}>Submit</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>{' '}\n                    <Button color=\"danger\" className=\"edit-btn\" onClick={deleteResumeSection}>Delete Section</Button>\n              </ModalFooter>\n            </Modal>\n      </div>\n    );\n}\n\nexport default EditResume;","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/projects/ViewProjects.jsx",["106"],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/projects/AddProjectData.jsx",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/projects/EditProject.jsx",["107"],"import React, {useState} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport '../../style.css';\n\n\nconst EditProject = (props) => {\n\n    const { className, projectEntry } = props;\n    const [project, setProject] = useState(projectEntry);\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n\n    const handleChange = (event) => {\n        console.log([event.target.name], event.target.value)\n        setProject((prevState) => ({\n          ...prevState,\n          [event.target.name]: event.target.value,\n        }));\n      };\n\n     const handleSubmit = (event) => {\n        event.preventDefault();\n        fetch(`http://localhost:4000/projects/edit-projects-data`, {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(project),\n        }).then((response) => response.json());\n        toggle();\n        // window.location.reload()\n      };\n\n      const deleteProject = async event => {\n\n        let id = project.id\n        console.log(id)\n        \n        event.preventDefault()\n        const deleteRow = async () => {\n            const response = await fetch(`http://localhost:4000/projects`, {\n                method: 'DELETE',\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify(project),         \n            }).then((response) => response.json());\n            alert(\"Project Deleted\")\n        }\n        deleteRow()\n        toggle()\n        // window.location.reload()\n    }\n\n    return (\n          <div>\n            <Button onClick={toggle} className=\"edit-btn\" style={{color: \"purple\"}}>Edit Project</Button>\n            <Modal isOpen={modal} toggle={toggle} className={className}>\n              <ModalHeader toggle={toggle} style={{color: \"purple\"}}>Edit Project</ModalHeader>\n                    <ModalBody>\n                        <div key={project.id}>\n                            <input\n                                type=\"text\"\n                                name=\"projectName\"\n                                value={project.projectName}\n                                onChange={handleChange}\n                                placeholder=\"Project Name\"\n                                id=\"inputID\"\n                                />\n                            <input\n                                type=\"text\"\n                                name=\"description\"\n                                value={project.description}\n                                onChange={handleChange}\n                                placeholder={\"Description\"}\n                                id=\"inputID\"\n                                />\n                            <input\n                                type=\"text\"\n                                name=\"img\"\n                                value={project.img}\n                                onChange={handleChange}\n                                placeholder=\"Project Image\"\n                                id=\"inputID\"\n                                />\n                            <input\n                                type=\"text\"\n                                name=\"link\"\n                                value={project.link}\n                                onChange={handleChange}\n                                placeholder=\"Link to Project Site\"\n                                id=\"inputID\"\n                                />\n                        </div>\n                    </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={handleSubmit}>Submit</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>{' '}\n                    <Button color=\"danger\" className=\"edit-btn\" onClick={deleteProject}>Delete Project</Button>\n              </ModalFooter>\n            </Modal>\n      </div>\n    );\n}\n\nexport default EditProject;","/Users/jay/Desktop/school/1030/courseProject-individual/src/components/login/SecureRoute.jsx",[],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/login/AdminPage.jsx",["108","109","110","111","112"],"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/login/Login.jsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":16},{"ruleId":"117","severity":1,"message":"121","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"122","line":11,"column":12,"nodeType":"119","messageId":"120","endLine":11,"endColumn":16},{"ruleId":"117","severity":1,"message":"123","line":7,"column":12,"nodeType":"119","messageId":"120","endLine":7,"endColumn":25},{"ruleId":"117","severity":1,"message":"124","line":42,"column":19,"nodeType":"119","messageId":"120","endLine":42,"endColumn":27},{"ruleId":"117","severity":1,"message":"125","line":16,"column":11,"nodeType":"119","messageId":"120","endLine":16,"endColumn":15},{"ruleId":"117","severity":1,"message":"124","line":42,"column":19,"nodeType":"119","messageId":"120","endLine":42,"endColumn":27},{"ruleId":"117","severity":1,"message":"126","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"127","line":1,"column":28,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"128","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":11},{"ruleId":"117","severity":1,"message":"129","line":13,"column":9,"nodeType":"119","messageId":"120","endLine":13,"endColumn":19},{"ruleId":"117","severity":1,"message":"130","line":16,"column":11,"nodeType":"119","messageId":"120","endLine":16,"endColumn":16},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'auth' is assigned a value but never used.","'newResumeData' is assigned a value but never used.","'response' is assigned a value but never used.","'data' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Nav' is defined but never used.","'providerID' is assigned a value but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]