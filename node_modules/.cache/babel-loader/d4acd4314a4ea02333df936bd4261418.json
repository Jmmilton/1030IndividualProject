{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Desktop/school/1030/courseProject-individual/src/components/login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Container, Row, Col, Form, InputGroup, InputGroupAddon, InputGroupText, Button, FormGroup, Label, Input } from 'reactstrap'; // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n//import '../../css/contact.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  // base loginSubmit function leveraged from example-master file provided in the sample from the course material\n  let history = useHistory();\n  let location = useLocation();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [auth, setAuth] = useState(true);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const loginSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch('http://localhost:4000/auth', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName,\n        password\n      })\n    });\n    const payload = await response.json();\n\n    if (response.status >= 400) {\n      setAuth(false);\n      document.getElementById('loginError').innerHTML = payload.message;\n    } else {\n      sessionStorage.setItem('token', payload.token);\n      let {\n        from\n      } = location.state || {\n        from: {\n          pathname: `/admin/${payload.id}`\n        }\n      };\n      history.replace(from);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"themed-container centered\",\n      children: [!auth && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"red\",\n            id: \"loginError\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: loginSubmit,\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"userName\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"userName\",\n                name: \"userName\",\n                placeholder: \"yourname@domain.com\",\n                required: true,\n                value: userName,\n                onChange: e => setUserName(e.target.value),\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"Password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  type: showPassword ? 'text' : 'password',\n                  name: \"name\",\n                  required: true,\n                  value: password,\n                  onChange: e => setPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                  addonType: \"append\",\n                  children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                    onClick: () => {\n                      setShowPassword(!showPassword);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"Wb0jQbb2s0FmDK8wYfxdWd1YkiY=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/jay/Desktop/school/1030/courseProject-individual/src/components/login/Login.jsx"],"names":["React","useState","useHistory","useLocation","Container","Row","Col","Form","InputGroup","InputGroupAddon","InputGroupText","Button","FormGroup","Label","Input","LoginPage","history","location","userName","setUserName","password","setPassword","auth","setAuth","showPassword","setShowPassword","loginSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","payload","json","status","document","getElementById","innerHTML","message","sessionStorage","setItem","token","from","state","pathname","id","replace","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Container, Row, Col, \n    Form, InputGroup, InputGroupAddon, InputGroupText, \n    Button, FormGroup, Label, Input} from 'reactstrap';\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n//import '../../css/contact.css';\n\nconst LoginPage = () => {\n\n    // base loginSubmit function leveraged from example-master file provided in the sample from the course material\n\n    let history = useHistory()\n    let location = useLocation()\n\n    const [userName, setUserName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [auth, setAuth] = useState(true)\n    const [showPassword, setShowPassword] = useState(false)\n\n    const loginSubmit = async event => {\n        \n        event.preventDefault()\n\n        const response = await fetch('http://localhost:4000/auth', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({userName, password})\n        })\n\n        const payload = await response.json()\n\n        if (response.status >= 400) {\n            setAuth(false)\n            document.getElementById('loginError').innerHTML = payload.message\n        } else {\n            sessionStorage.setItem('token', payload.token)\n\n            let { from } = location.state || { from: { pathname: `/admin/${payload.id}` } };\n            history.replace(from);\n        }\n        \n    }\n\n    return (\n        <main>\n            <Container className=\"themed-container centered\">\n                {!auth && \n                    <div>\n                        <p><span className='red' id='loginError'></span></p>\n                    </div>\n                }\n                <h3>Log in</h3>\n                <Row>\n                    <Col>\n                        <Form onSubmit={loginSubmit}>\n                            <FormGroup>\n                                <Label for=\"userName\">Username</Label>\n                                <Input \n                                    type=\"userName\" \n                                    name=\"userName\" \n                                    placeholder=\"yourname@domain.com\" \n                                    required\n                                    value={userName} \n                                    onChange={e => setUserName(e.target.value)} \n                                    autoFocus\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"Password\">Password</Label>\n                                <InputGroup>\n                                    <Input \n                                        type={showPassword ? 'text' : 'password'} \n                                        name=\"name\" \n                                        required \n                                        value={password} \n                                        onChange={e => setPassword(e.target.value)} \n                                    />\n                                    <InputGroupAddon addonType=\"append\">\n                                        <InputGroupText onClick = {() => {\n                                            setShowPassword(!showPassword)\n                                        }}>\n                                            {/* <FontAwesomeIcon icon='eye'/> */}\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                </InputGroup>\n                            </FormGroup>\n                            <Button type=\"submit\" color=\"primary\">Submit</Button> \n                        </Form>\n                    </Col>\n                    <Col>\n                    </Col>\n                </Row>\n            </Container>\n        </main>\n    );\n}\n \nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}