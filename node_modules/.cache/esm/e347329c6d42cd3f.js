let express,cors,resumeRoutes,projectRoutes,adminRoute;_6d4‍.w("express",[["default",["express"],function(v){express=v}]]);_6d4‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_6d4‍.w("./db/routes/resumeRoutes",[["default",["resumeRoutes"],function(v){resumeRoutes=v}]]);_6d4‍.w("./db/routes/projectRoutes",[["default",["projectRoutes"],function(v){projectRoutes=v}]]);_6d4‍.w("./db/routes/adminRoutes",[["default",["adminRoute"],function(v){adminRoute=v}]]);




// import userRouter from './src/routes/userRoutes.js'
// import patientRouter from './src/routes/patientRoutes.js'
// import careProviderRouter from './src/routes/careProviderRoutes.js'
// import errorHandler from "./src/middleware/errorHandler"

// import db from "./db/connection"



const app = express()
const PORT = process.env.PORT || 4000

app.use(cors())

app.use(express.json())

app.use(resumeRoutes)

app.use(projectRoutes)

app.use(adminRoute)

// app.get("*", (req, res, next) => {
    
//     let err = new Error("user typed non-existent URL")
    
//     next(err)

// })

// app.get("/api/cats", (req, res) => {
//     db.query("SELECT * FROM admin", function (error, results, fields) {
//         if(error) throw error;
//         return res.status(200).send(results)
//     })
// })

// app.post("/api/cats", (req, res) => {
//     db.query("INSERT INTO admin (firstName, lastName, email, specialization, isAdmin) VALUES (?, ?, ?, ?, ?)", [req.body.firstName, req.body.lastName, req.body.email, req.body.specialization, req.body.inAdmin], function (error, results, fields) {
//         if(error) throw error;
//         return res.status(201).send(results)
//     })
// })

// app.delete("/api/cats", (req, res) => {
//     db.query("SELECT * FROM admin", function (error, results, fields) {
//         if(error) throw error;
//         return res.status(200).send(results)
//     })
// })

// app.update("/api/cats", (req, res) => {
//     db.query("SELECT * FROM admin", function (error, results, fields) {
//         if(error) throw error;
//         return res.status(200).send(results)
//     })
// })

// app.use(errorHandler)
// app.get("*", (req, res, next) => {
    
//     let err = new Error("user typed non-existent URL")
    
//     next(err)
// })

app.listen(PORT, () => console.log(`API server ready on http://localhost:${PORT}`))
